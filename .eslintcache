[{"/home/asad2200/WebstormProjects/git-profile-api/src/index.js":"1","/home/asad2200/WebstormProjects/git-profile-api/src/reportWebVitals.js":"2","/home/asad2200/WebstormProjects/git-profile-api/src/App.js":"3","/home/asad2200/WebstormProjects/git-profile-api/src/Pages/Home.js":"4","/home/asad2200/WebstormProjects/git-profile-api/src/Pages/PageNotFound.js":"5","/home/asad2200/WebstormProjects/git-profile-api/src/Pages/Signin.js":"6","/home/asad2200/WebstormProjects/git-profile-api/src/Context/UserContext.js":"7","/home/asad2200/WebstormProjects/git-profile-api/src/Components/Footer.js":"8","/home/asad2200/WebstormProjects/git-profile-api/src/Components/Header.js":"9","/home/asad2200/WebstormProjects/git-profile-api/src/Config/firebaseConfig.js":"10","/home/asad2200/WebstormProjects/git-profile-api/src/Pages/Signup.js":"11","/home/asad2200/WebstormProjects/git-profile-api/src/Components/UserCard.js":"12","/home/asad2200/WebstormProjects/git-profile-api/src/Components/ReposCard.js":"13"},{"size":500,"mtime":1610420322183,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1610420322183,"results":"16","hashOfConfig":"15"},{"size":1463,"mtime":1610459020040,"results":"17","hashOfConfig":"15"},{"size":1924,"mtime":1610508209952,"results":"18","hashOfConfig":"15"},{"size":174,"mtime":1610421408403,"results":"19","hashOfConfig":"15"},{"size":3605,"mtime":1610508460635,"results":"20","hashOfConfig":"15"},{"size":85,"mtime":1610422924218,"results":"21","hashOfConfig":"15"},{"size":345,"mtime":1610508432745,"results":"22","hashOfConfig":"15"},{"size":1997,"mtime":1610508536203,"results":"23","hashOfConfig":"15"},{"size":381,"mtime":1610458735692,"results":"24","hashOfConfig":"15"},{"size":3609,"mtime":1610508467587,"results":"25","hashOfConfig":"15"},{"size":962,"mtime":1610507679029,"results":"26","hashOfConfig":"15"},{"size":933,"mtime":1610507624550,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17huuvd",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/home/asad2200/WebstormProjects/git-profile-api/src/index.js",[],["60","61"],"/home/asad2200/WebstormProjects/git-profile-api/src/reportWebVitals.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/App.js",["62"],"// Css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\n// Toast\nimport {ToastContainer, toast} from 'react-toastify';\n\n// firebase\nimport firebase from \"firebase\";\nimport 'firebase/auth';\n\n// Router\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\n// Components\nimport Home from \"./Pages/Home\";\nimport Signin from \"./Pages/Signin\";\nimport Signup from \"./Pages/Signup\";\nimport PageNotFound from \"./Pages/PageNotFound\";\n\n// Other\nimport {useState} from \"react\";\nimport {UserContext} from \"./Context/UserContext\";\nimport Footer from \"./Components/Footer\";\nimport Header from \"./Components/Header\";\nimport firebaseConfig from \"./Config/firebaseConfig\";\n\n//initialize app\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n    const [user, setUser] = useState(null);\n\n    return (\n        <Router>\n            <ToastContainer position=\"top-center\"  />\n            <UserContext.Provider value={{user, setUser}}>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/signin\" component={Signin}/>\n                    <Route exact path=\"/signup\" component={Signup}/>\n                    <Route exact path=\"*\" component={PageNotFound}/>\n                </Switch>\n                <Footer />\n            </UserContext.Provider>\n        </Router>\n    );\n}\n\nexport default App;\n","/home/asad2200/WebstormProjects/git-profile-api/src/Pages/Home.js",["63"],"import Axios from 'axios';\nimport {UserContext} from \"../Context/UserContext\";\nimport {useContext, useState} from \"react\";\nimport {toast} from \"react-toastify\";\nimport {Redirect} from \"react-router-dom\";\nimport {Button, Col, Container, Form, Input, InputGroup, InputGroupAddon, Row} from \"reactstrap\";\nimport UserCard from \"../Components/UserCard\";\nimport ReposCard from \"../Components/ReposCard\";\n\nconst Home = () => {\n    const context = useContext(UserContext);\n    const [query, setQuery] = useState('');\n    const [user, setUser] = useState(null);\n\n    const fetchDetails = async () => {\n        try {\n            const {data} = await Axios.get(`https://api.github.com/users/${query}`);\n            setUser(data);\n            console.log(data);\n        } catch (error) {\n            toast(\"Not able to find user\", {type: \"error\"})\n        }\n    }\n\n    if (!context.user?.uid) {\n        return <Redirect to={\"/signin\"}/>\n    }\n\n    return (\n        <Container fluid>\n            <Row className={\"m-3\"}>\n                <Col md={\"5\"}>\n                        <InputGroup>\n                            <Input type={\"text\"} value={query} onChange={(e) => setQuery(e.target.value)}\n                                   placeholder={\"Enter Username..\"}\n                            />\n                            <InputGroupAddon addonType={\"append\"}>\n                                <Button color={\"info\"} onClick={fetchDetails}>\n                                    Fetch USer\n                                </Button>\n                            </InputGroupAddon>\n                        </InputGroup>\n                {\n                    user ? <UserCard user={user}/> : null\n                }\n            </Col>\n            <Col md={\"7\"}>\n                {\n                    user ? <ReposCard repos_url={user.repos_url}/> : null\n                }\n            </Col>\n        </Row>\n</Container>\n);\n};\n\nexport default Home;","/home/asad2200/WebstormProjects/git-profile-api/src/Pages/PageNotFound.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/Pages/Signin.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/Context/UserContext.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/Components/Footer.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/Components/Header.js",["64"],"import React, {useState, useContext, Fragment} from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    NavbarText, Col\n} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {UserContext} from \"../Context/UserContext\";\n\nconst Header = () => {\n    const context = useContext(UserContext);\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return (\n        <Navbar className={\"bg-info\"} expand={\"md\"}>\n            <NavbarBrand>\n                <Link to={\"/\"} className={\"text-white text-decoration-none\"}>\n                    <strong> GitHub User </strong>\n                </Link>\n            </NavbarBrand>\n            <NavbarText className={\"text-white\"}>\n            {\n                context.user?.email ? `Welcome ${context.user.email}` : \"\"\n            }\n            </NavbarText>\n            <NavbarToggler onClick={toggle} />\n            <Collapse isOpen={isOpen} navbar>\n                <Nav className={\"ml-auto\"}>\n                    {\n                        context.user ? (\n                            <NavItem>\n                                <NavLink tag={Link} onClick={() => context.setUser(null)} className={\"text-white border\"}>LogOut</NavLink>\n                            </NavItem>\n                        ) : (\n                            <Fragment>\n                                <NavItem>\n                                    <NavLink tag={Link} to={\"/signup\"} className={\"text-white border\"}>SignUp</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink tag={Link} to={\"/signin\"} className={\"text-white border\"}>SignIn</NavLink>\n                                </NavItem>\n                            </Fragment>\n                        )\n                    }\n                </Nav>\n            </Collapse>\n        </Navbar>\n    );\n};\n\nexport default Header;","/home/asad2200/WebstormProjects/git-profile-api/src/Config/firebaseConfig.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/Pages/Signup.js",[],"/home/asad2200/WebstormProjects/git-profile-api/src/Components/UserCard.js",["65"],"import React from 'react';\nimport {Card, CardBody} from \"reactstrap\";\n\nconst UserCard = ({user}) => {\n    return (\n        <div className={\"mt-3 mb-3 border border-info p-2\"}>\n            <Card className=\"text-center  \">\n                <img src={user.avatar_url} className={\"img-thumbnail\"}/>\n                <CardBody>\n                    <div className=\"text-primary\">{user.name}</div>\n                    <div className=\"text-primary\">{user.bio}</div>\n                    <div className=\"text-primary\">{user.location}</div>\n                    <div className=\"text-primary\">{user.email}</div>\n                    <div className=\"text-secondary\">Hire: {user.hireable ? \"YES\" : \"NO\"}</div>\n                    <div className=\"text-secondary\">Followers: {user.followers}</div>\n                    <div className=\"text-secondary\">Following: {user.following}</div>\n                </CardBody>\n            </Card>\n        </div>\n    );\n};\n\nexport default UserCard;","/home/asad2200/WebstormProjects/git-profile-api/src/Components/ReposCard.js",["66"],"import {useState, useEffect} from 'react';\nimport Axios from \"axios\"\nimport {ListGroup, ListGroupItem} from \"reactstrap\";\n\n\nconst ReposCard = ({repos_url}) => {\n    const [repos, setRepos] = useState([]);\n\n    const fetchRepos = async () => {\n        const {data} = await Axios.get(repos_url);\n        setRepos(data);\n    }\n\n    useEffect(() => {\n        fetchRepos();\n    }, [repos_url])\n\n    return (\n        <ListGroup className={\"mb-5 border border-info p-2\"}>\n            {\n                repos.map(repo => (\n                    <ListGroupItem>\n                        <div className=\"text-primary\"><a href={repo.html_url}> {repo.name}</a></div>\n                        <div className=\"text-secondary\">{repo.language}</div>\n                        <div className=\"text-info\">{repo.description}</div>\n                    </ListGroupItem>\n                ))\n            }\n        </ListGroup>\n    );\n};\n\nexport default ReposCard;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":7,"column":25,"nodeType":"73","messageId":"74","endLine":7,"endColumn":30},{"ruleId":"71","severity":1,"message":"75","line":6,"column":33,"nodeType":"73","messageId":"74","endLine":6,"endColumn":37},{"ruleId":"71","severity":1,"message":"76","line":10,"column":17,"nodeType":"73","messageId":"74","endLine":10,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":8,"column":17,"nodeType":"79","endLine":8,"endColumn":73},{"ruleId":"80","severity":1,"message":"81","line":16,"column":8,"nodeType":"82","endLine":16,"endColumn":19,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRepos'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [fetchRepos, repos_url]",{"range":"89","text":"90"},[376,387],"[fetchRepos, repos_url]"]